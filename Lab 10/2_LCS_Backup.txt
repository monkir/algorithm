class LCS
{
    int *c=NULL;
    int rc=0, cc=0;
    string *b=NULL;
    int rb=0, cb=0;
public:
    void new_c(int rc, int cc)
    {
        this->rc=rc;
        this->cc=cc;
        c= new int[rc*cc];
        //2D array [rc][cc]
        //[i][j]=[i*cc+j]
    }
    void new_b(int rb, int cb)
    {
        this->rb=rb;
        this->cb=cb;
        b= new string[rb*cb];
        //2D array [rb][cb]
        //[i][j]=[i*cb+j]
    }
    void set_c(int i, int j, int value)
    {
        c[i*cc+j]=value;
    }
    void set_b(int i, int j, string value)
    {
        b[i*cb+j]=value;
    }
    int get_c(int i, int j)
    {
        return c[i*cc+j];
    }
    string get_b(int i, int j)
    {
        return b[i*cb+j];
    }
    void LCS_Length(string X, string Y, int m, int n)
    {
        //c=new int[m+1][n+1];
        //b=new string[m+1][n+1];
        new_c(m+1,n+1);
        new_b(m+1,n+1);
        for(int i=1; i<=m; i++)
        {
            //c[i][0]=0;
            set_c(i,0,0);
        }
        for(int j=0; j<=n; j++)
        {
            //c[0][j]=0;
            set_c(0,j,0);
        }
        for(int i=1; i<=m; i++)
        {
            for(int j=0; j<=n; j++)
            {
                if(X[i]==Y[i])
                {
                    //c[i][j]=c[i-1][j-1]+1;
                    set_c(i, j, get_c(i-1,j-1)+1);
                    //b[i][j]="copy";
                    set_b(i, j, "copy");
                }
                //else if(c[i-1][j]>=c[i][j-1])
                else if(get_c(i-1,j)>=get_c(i,j-1))
                {
                    //c[i][j]=c[i-1][j];
                    set_c(i, j, get_c(i-1,j));
                    //b[i][j]="skipX";
                    set_b(i, j, "skipX");
                }
                else
                {
                    //c[i][j]=c[i][j-1];
                    set_c(i, j, get_c(i,j-1));
                    //b[i][j]="skipY";
                    set_b(i, j, "skipY");
                }
            }
        }
        //return c, b;
    }
};

